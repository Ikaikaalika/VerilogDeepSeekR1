[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm"]
build-backend = "setuptools.build_meta"

[project]
name = "deepseek-verilog-finetune"
version = "0.1.0"
description = "DeepSeek R1 Fine-tuning Pipeline for Verilog Code Generation"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "VerilogDeepSeekR1 Team"}
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development :: Code Generators",
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.0.0",
    "transformers>=4.36.0",
    "accelerate>=0.25.0",
    "datasets>=2.14.0",
    "evaluate>=0.4.0",
    "deepspeed>=0.12.0",
    "wandb>=0.16.0",
    "trl>=0.7.0",
    "peft>=0.7.0",
    "bitsandbytes>=0.41.0",
    "huggingface_hub>=0.19.0",
    "tokenizers>=0.15.0",
    "numpy>=1.24.0",
    "pandas>=2.0.0",
    "scikit-learn>=1.3.0",
    "matplotlib>=3.7.0",
    "seaborn>=0.12.0",
    "tqdm>=4.65.0",
    "psutil>=5.9.0",
    "GPUtil>=1.4.0",
    "pyyaml>=6.0",
    "regex>=2023.0.0",
    "sentencepiece>=0.1.99",
    "protobuf>=4.24.0",
    "fire>=0.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "flake8>=6.0.0",
    "isort>=5.12.0",
    "mypy>=1.0.0",
    "pre-commit>=3.0.0",
]
onnx = [
    "onnx>=1.14.0",
    "onnxruntime>=1.16.0",
]

[project.urls]
Homepage = "https://github.com/your-repo/VerilogDeepSeekR1"
Repository = "https://github.com/your-repo/VerilogDeepSeekR1"
Issues = "https://github.com/your-repo/VerilogDeepSeekR1/issues"

[project.scripts]
verilog-download = "scripts.download_and_preprocess:main"
verilog-train-sft = "scripts.train_supervised:main"
verilog-train-ppo = "scripts.train_ppo:main"
verilog-evaluate = "scripts.evaluate_model:main"
verilog-deploy = "scripts.deploy_model:main"
verilog-monitor = "scripts.monitor_training:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["*"]

[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 100
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".tox",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "transformers.*",
    "torch.*",
    "datasets.*",
    "wandb.*",
    "deepspeed.*",
    "peft.*",
    "trl.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=term-missing",
    "--cov-report=html",
]